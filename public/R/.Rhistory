# Libraries
library(ggplot2)
# Load all the data toghether
load("all_data.Rda")
str(all_data)
all_data$return_performance = all_data[,"return"]
load("all_data.Rda")
all_data$return_performance = all_data[,"return"]
# look at distribution of sharpe ratios subjects saw
ggplot(all_data, aes(x = sharpe)) + geom_histogram()# + geom_density(aes(fill=group),alpha=0.25)
ggplot(all_data, aes(x = sharpe)) + geom_density(fill='black', alpha=0.25) + geom_density(aes(fill=group),alpha=0.25)
# simple regression suggested by Davids
summary(lm(up~sharpe, all_data))
summary(lm(down~sharpe, all_data))
# look at kernel regression of up / down given sharpe
kreg_up = ksmooth(all_data$sharpe, all_data$up, bandwidth = 1)
kreg_down = ksmooth(all_data$sharpe, all_data$down, bandwidth = 1)
kreg_df = data.frame(sharpe = kreg_up$x, prob = kreg_up$y, type = "Up")
kreg_df = rbind(kreg_df,
data.frame(sharpe = kreg_down$x, prob = kreg_down$y, type = "Down")
)
ggplot(kreg_df, aes(x = sharpe, y = prob, color = type)) + geom_line()
#covariate balance check
all_data_cov <- all_data[, !names(all_data) %in% c("up", "down", "time",
"group", "chart", "ret", "vol"
,"direction", "conviction", "retq1",
"retq2","retq3","retq4")]
all_data_cov_complete <- na.omit(all_data_cov)
# find and remove categorical variables with only one value
lapply(na.omit(all_data_cov_complete), unique)
all_data_cov_complete <- all_data_cov_complete[, !names(all_data_cov_complete) %in% c("personal",
"professional"
)]
#omit variables perfectly predicted by otherse
all_data_cov_complete <- all_data_cov_complete[, !names(all_data_cov_complete) %in% c("other")]
#regress on all and subsets of covariates
summary(lm(sharpe~.,data=all_data_cov_complete))
summary(lm(sharpe~user,data=all_data_cov_complete))
summary(lm(sharpe~name,data=all_data_cov_complete))
#tests of within subjects assumptions
if(!require(reshape)){
install.packages("reshape")
library(reshape)
}
if(!require(reshape)){
install.packages("DataCombine")
library(reshape)
}
summary(lm(up ~ sharpe * professional + name + literacy + knowledge + experience + personal + user, all_data))
summary(lm(down ~ sharpe * professional + name + literacy + knowledge + experience + personal + user, all_data))
return_subset = complete.cases(all_data$return_performance)
View(all_data)
View(all_data)
investType_subset = complete.cases(all_data$investType)
summary(lm(confident_strong ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, all_data[investType_subset,]))
investType_subset
return_subset = complete.cases(all_data$return_performance)
summary(lm(confident_strong ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user, all_data[return_subset,]))
#create binary conviction variables and perform regression
all_data$confident_strong <- ifelse(all_data$conviction!="Strong", 0, 1)
all_data$confident_weak <- ifelse(all_data$conviction!="Weak", 0, 1)
summary(lm(confident_strong ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, all_data[investType_subset,]))
summary(lm(confident_weak ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, all_data[investType_subset,]))
all_data[investType_subset,]
all_data[investType_subset,]$investType
levels(all_data[investType_subset,]$investType)
type(all_data[investType_subset,]$investType)
(all_data[investType_subset,]$investType)
as.factor(all_data[investType_subset,]$investType)
investType_subset_data$investType = as.factor(investType_subset_data$investType)
investType_subset = complete.cases(all_data$investType)
investType_subset_data = all_data[investType_subset,] #new data frame with complete cases for 'investType'
investType_subset_data$investType = as.factor(investType_subset_data$investType)
investType_subset_data$investType = as.factor(investType_subset_data$investType) #convert to factor
summary(lm(confident_strong ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, all_data[investType_subset,]))
summary(lm(confident_weak ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, all_data[investType_subset,]))
summary(lm(confident_strong ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, investType_subset_data))
summary(lm(confident_weak ~ sharpe * return_performance + name + literacy + knowledge + experience + professional + user + investType, investType_subset_data))
investType_subset_data
sum(is.na(investType_subset_data$investType))
summary(investType_subset_data$investType))
summary(investType_subset_data$investType)
